'''
Celem programu jest zamiana tygodnia i roku na dokładną datę.  
Ma to wymiar praktyczny przy zastosowaniu danych statystycznych, którymi się posługuje, ale głównym celem jest przećwiczenie
programowania w Pythonie. Trochę utrudniam sobie zadanie.  

Przykład: 2020 31 - program ma określić datę przypadającą na 31 tydzień 2020 roku
Nie będę używał datetime ani calendar 

styczeń 2000 - sobota, 2001 - pon
styczeń 2020 - środa
'''



# deklaruje zmienne pomocne w zadaniu: liczba dni w kolejnych miesiącach, nazwy dni tygodnia i miesięcy
months_days = [31,28,31,30,31,30,31,31,30,31,30,31]
months_names = ['Styczeń','Luty','Marzec','Kwiecień','Maj','Czerwiec','Lipiec','Sierpień','Wrzesień','Październik','Listopad','Grudzień']
days_of_week = ["Nd","Pon", "Wt", "Śr", "Czw", "Pt", "Sob"]








# poniższa funkcja ma pobrać input od użytkownika. Można też wpisać wartości ręcznie

def input_1():
    try:
        global year,week
        ################################################################################
        
        
        #year,week = 2021,1  # usprawniam testowanie programu omijając na razie input
        year = 2020
        
        ##############################################################################
        assert year>=2000
        #year = int(input("Podaj rok: "))
        week = int(input("Podaj tydzień: "))
        
        
    except AssertionError:
        print("Rok nie może być mniejszy niż 2000")  # wynika z założeń programu
    except:
        print("Proszę podać numer.")
        input_1()

input_1()




# poniższa funkcja liczy dni od 1 stycznia do podanego tygodnia i roku. 

def days_total(year,week):
    
    
    global days_total
    days_total = 0
    current_year = 2000  # zaczynamy od roku 2000
    
    # 
    for i in range(2000,year):
        # rok przestępny i liczba dni przekraczających luty
        if current_year%4==0:         #and ( ((week-1)*7+1)>=60 or current_year!=year):
            days_total+=1
        '''
        if current_year==year:
            days_total+=((week-1)*7+1)
            print(days_total)
            return days_total
        '''
        days_total+=365
        current_year+=1
    
    days_total+=(week-1)*7+1
    
    print(days_total)
        
    
    

    
days_total(year,week)
    

    

    
# Na podstawie obliczonej liczby dni dodajemy ich sumę do 1 stycznia 2000 roku i mamy otrzymać dobry wynik
    
def day_of_week(days_total):
    weekday = 6   # 1 stycznia 2000 roku to sobota (7 element listy dni tygodnia, czyli 6)
    month_name = 0     # styczeń
    first_year = 2000
    
    
    
    # zmienne odmierzające dzień miesiąca, roku i czy rok jest przestępny
    day_month = 1
    day_year = 1
    przestępny = True
    
    x=1   # zmienna pomocnicza do liczenia dni 
    y=0   # zmienna pomocnicza do wyznaczania danego miesiąca 
    
    
    # poniższa pętla dodaje kolejne dni licząc od 1 stycznia 2000. Odmierza dni tygodnia, nazwy miesięcy i lata
    
    while x!= days_total:
        # dni
        weekday+=1
        if weekday==7:
            weekday=0
            
        
        day_month+=1
        
        
        # miesiące
        if day_month>months_days[month_name]:
            if przestępny==True and month_name==1 and day_month==29:  # wyjątek dla 29 lutego
                pass
            else:
                day_month=1
                month_name+=1
                if month_name>11:
                    month_name=0
        
            
        #lata
        day_year+=1
        
        if day_year>365:
            if przestępny==True:
                przestępny=False
                pass
            else:
                day_year=1
                first_year+=1
                
                if first_year%4==0:
                    przestępny=True
        
        
        
        # poniższe print jest do testowania dzień po dniu celem znalezienia szczegółowych bugów       
        #print(day_month,days_of_week[weekday],months_names[month_name],first_year,przestępny)     # do testów pętli(po kolei wypisuje kolejne dni)
        x+=1
            
    
    
    
    # print z wynikiem (Hurrra)           
    print(day_month,days_of_week[weekday],months_names[month_name],year)
        

    
    
day_of_week(days_total)   
    


'''
Z excela wynika, że program podaje poprawną liczbę dni między dwiema datami. 


Program można było zrobić łatwiej, choćby robiąc listę z pierwszymi dniami danego roku i liczeniem tylko 1 roku. 
Uniknąłbym wielu komplikacji w ten sposób.

Program działa logicznie, natomiast nie jestem przekonany co do ilości użytych ifów. Byłoby łatwiej gdyby nie to, że miesiące
mają różną ilość dni, a wszystko komplikują jeszcze dni przestępne. 


'''
