import matplotlib.pyplot as plt

from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

digits = load_digits()

dir(digits)
# ['DESCR', 'data', 'feature_names', 'frame', 'images', 
# 'target', 'target_names']
digits.data[0]
plt.gray()
#plt.matshow(digits.images[0])
#for i in range(5):
#    plt.matshow(digits.images[i])
    
digits.target[0:5]

X_train,X_test,y_train,y_test = train_test_split(digits.data, digits.target,test_size=0.2)

model = LogisticRegression()

model.fit(X_train,y_train)

model.score(X_test,y_test)
# 95,5%

model.predict([digits.data[67]])

y_pred = model.predict(X_test)
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test,y_pred)

import seaborn as sb

#confusion matrix

plt.figure(figsize=(10,7))
sb.heatmap(cm,annot=True)
plt.xlabel("Przewidywania")
plt.ylabel("Faktycznie")
